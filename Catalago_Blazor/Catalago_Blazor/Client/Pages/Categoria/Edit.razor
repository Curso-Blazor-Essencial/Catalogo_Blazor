@page "/categoria/edit/{categoriaid:int}"
@inject HttpClient http
@inject NavigationManager navigation

<h2> Editar Categoria</h2>

<EditForm Model="@categoria" OnValidSubmit="@EditarCategoria">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label form="nome"> Nome</label>
        <div>
            <InputText @bind-Value="@categoria.Nome" class="form-control" />
            <ValidationMessage For="@(()=>categoria.Nome)" />
        </div>
    </div>
    <div class="form-group">
        <label form="descricao"> Descrição</label>
        <div>
            <InputText @bind-Value="@categoria.Descricao" class="form-control" />
            <ValidationMessage For="@(()=>categoria.Descricao)" />
        </div>
    </div>
    <br />
    <button type="submit" class="btn btn-success"> Salvar </button>
</EditForm>


@code {
    [Parameter]
    public int categoriaid { get; set; }

    Categoria categoria = new Categoria();

    // Evento chamado quando componente é inicializado e após um parâmetro ser modificado
    protected async override Task OnParametersSetAsync()
    {
        // Chamar instância http pra retornar uma categoria passando os dados da api
        categoria = await http.GetFromJsonAsync<Categoria>($"api/categoria/{categoriaid}");
    }

    async Task EditarCategoria()
    {
        await http.PutAsJsonAsync("api/categoria", categoria);
        navigation.NavigateTo("categoria");
    }
}
